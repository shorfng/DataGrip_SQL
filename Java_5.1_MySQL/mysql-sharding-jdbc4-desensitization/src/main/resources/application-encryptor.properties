# \u914D\u7F6E\u6570\u636E\u6E90
spring.shardingsphere.datasource.names = ds0
# ds0\uFF1Asharding-jdbc1
spring.shardingsphere.datasource.ds0.type = com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds0.driver-class-name = com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds0.jdbc-url = jdbc:mysql://localhost:3306/sharding-jdbc1
spring.shardingsphere.datasource.ds0.username = root
spring.shardingsphere.datasource.ds0.password = root

# encrypt
# \u660E\u6587\u5217\u540D
spring.shardingsphere.encrypt.tables.c_user.columns.pwd.plain-column = pwd_plain
# \u5BC6\u6587\u5217
spring.shardingsphere.encrypt.tables.c_user.columns.pwd.cipher-column = pwd_cipher

# \u52A0\u5BC6\u5668\u914D\u7F6E\uFF08\u4F7F\u7528aes\uFF09
spring.shardingsphere.encrypt.encryptors.td_pwd.type = aes
# \u5BC6\u94A5
spring.shardingsphere.encrypt.encryptors.td_pwd.props.aes.key.value = 1234
# encryptors
spring.shardingsphere.encrypt.tables.c_user.columns.pwd.encryptor = td_pwd

# \u4F7F\u7528\u660E\u6587\u5217\u67E5\u8BE2
spring.shardingsphere.props.query.with.cipher.column = false
# \u4F7F\u7528\u5BC6\u6587\u5217\u67E5\u8BE2
#spring.shardingsphere.props.query.with.cipher.column = true


# \u5185\u7F6E\u4E3B\u952E\u751F\u6210\u5668\uFF08\u4F7F\u7528\u96EA\u82B1\u7B97\u6CD5 SNOWFLAKE\uFF09 --- \u672A\u8D77\u4F5C\u7528\uFF0C\u6682\u672A\u89E3\u51B3
spring.shardingsphere.sharding.tables.c_user.key-generator.column = id
spring.shardingsphere.sharding.tables.c_user.key-generator.type = SNOWFLAKE
